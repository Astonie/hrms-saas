[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Coverage settings
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=95
    --cov-branch
    --cov-source=app
    --durations=10
    --maxfail=5
    --reruns=2
    --reruns-delay=1

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    api: API tests
    security: Security tests
    slow: Slow running tests
    database: Database tests
    auth: Authentication tests
    tenant: Tenant management tests
    subscription: Subscription tests
    module_access: Module access tests

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# Test output
console_output_style = progress

# Parallel execution
# num_workers = auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */env/*
    */node_modules/*
    setup.py
    manage.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = coverage_html

[coverage:xml]
output = coverage.xml
