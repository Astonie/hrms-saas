"""Add tenant_id fields to Employee and Department models

Revision ID: 86f337e45feb
Revises: 1a70c150d786
Create Date: 2025-08-17 13:30:43.240701

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '86f337e45feb'
down_revision = '1a70c150d786'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('departments', sa.Column('tenant_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_departments_tenant_id'), 'departments', ['tenant_id'], unique=False)
    op.create_foreign_key(None, 'departments', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.add_column('employees', sa.Column('tenant_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_employees_tenant_id'), 'employees', ['tenant_id'], unique=False)
    op.create_foreign_key(None, 'employees', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('leave_approval_workflows_tenant_id_fkey'), 'leave_approval_workflows', type_='foreignkey')
    op.create_foreign_key(None, 'leave_approval_workflows', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('leave_balances_tenant_id_fkey'), 'leave_balances', type_='foreignkey')
    op.create_foreign_key(None, 'leave_balances', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('leave_calendars_tenant_id_fkey'), 'leave_calendars', type_='foreignkey')
    op.create_foreign_key(None, 'leave_calendars', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('leave_notifications_tenant_id_fkey'), 'leave_notifications', type_='foreignkey')
    op.create_foreign_key(None, 'leave_notifications', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('leave_policies_tenant_id_fkey'), 'leave_policies', type_='foreignkey')
    op.create_foreign_key(None, 'leave_policies', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('leave_requests_tenant_id_fkey'), 'leave_requests', type_='foreignkey')
    op.create_foreign_key(None, 'leave_requests', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('payroll_audit_logs_tenant_id_fkey'), 'payroll_audit_logs', type_='foreignkey')
    op.create_foreign_key(None, 'payroll_audit_logs', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('payroll_entries_tenant_id_fkey'), 'payroll_entries', type_='foreignkey')
    op.create_foreign_key(None, 'payroll_entries', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('payroll_runs_tenant_id_fkey'), 'payroll_runs', type_='foreignkey')
    op.create_foreign_key(None, 'payroll_runs', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('performance_feedback_tenant_id_fkey'), 'performance_feedback', type_='foreignkey')
    op.create_foreign_key(None, 'performance_feedback', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('performance_goals_tenant_id_fkey'), 'performance_goals', type_='foreignkey')
    op.create_foreign_key(None, 'performance_goals', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('performance_metrics_tenant_id_fkey'), 'performance_metrics', type_='foreignkey')
    op.create_foreign_key(None, 'performance_metrics', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('performance_reviews_tenant_id_fkey'), 'performance_reviews', type_='foreignkey')
    op.create_foreign_key(None, 'performance_reviews', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('plan_features_plan_id_fkey'), 'plan_features', type_='foreignkey')
    op.create_foreign_key(None, 'plan_features', 'subscription_plans', ['plan_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint(op.f('salary_structures_tenant_id_fkey'), 'salary_structures', type_='foreignkey')
    op.create_foreign_key(None, 'salary_structures', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    op.drop_constraint(op.f('tenant_billing_invoices_tenant_id_fkey'), 'tenant_billing_invoices', type_='foreignkey')
    op.create_foreign_key(None, 'tenant_billing_invoices', 'tenants', ['tenant_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint(op.f('tenant_subscription_history_tenant_id_fkey'), 'tenant_subscription_history', type_='foreignkey')
    op.create_foreign_key(None, 'tenant_subscription_history', 'tenants', ['tenant_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint(op.f('tenant_usage_logs_tenant_id_fkey'), 'tenant_usage_logs', type_='foreignkey')
    op.create_foreign_key(None, 'tenant_usage_logs', 'tenants', ['tenant_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint(op.f('tenants_subscription_plan_id_fkey'), 'tenants', type_='foreignkey')
    op.create_foreign_key(None, 'tenants', 'subscription_plans', ['subscription_plan_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint(op.f('users_tenant_id_fkey'), 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'tenants', ['tenant_id'], ['id'], referent_schema='public')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key(op.f('users_tenant_id_fkey'), 'users', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'tenants', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('tenants_subscription_plan_id_fkey'), 'tenants', 'subscription_plans', ['subscription_plan_id'], ['id'])
    op.drop_constraint(None, 'tenant_usage_logs', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('tenant_usage_logs_tenant_id_fkey'), 'tenant_usage_logs', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'tenant_subscription_history', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('tenant_subscription_history_tenant_id_fkey'), 'tenant_subscription_history', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'tenant_billing_invoices', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('tenant_billing_invoices_tenant_id_fkey'), 'tenant_billing_invoices', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'salary_structures', type_='foreignkey')
    op.create_foreign_key(op.f('salary_structures_tenant_id_fkey'), 'salary_structures', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'plan_features', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('plan_features_plan_id_fkey'), 'plan_features', 'subscription_plans', ['plan_id'], ['id'])
    op.drop_constraint(None, 'performance_reviews', type_='foreignkey')
    op.create_foreign_key(op.f('performance_reviews_tenant_id_fkey'), 'performance_reviews', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'performance_metrics', type_='foreignkey')
    op.create_foreign_key(op.f('performance_metrics_tenant_id_fkey'), 'performance_metrics', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'performance_goals', type_='foreignkey')
    op.create_foreign_key(op.f('performance_goals_tenant_id_fkey'), 'performance_goals', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'performance_feedback', type_='foreignkey')
    op.create_foreign_key(op.f('performance_feedback_tenant_id_fkey'), 'performance_feedback', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'payroll_runs', type_='foreignkey')
    op.create_foreign_key(op.f('payroll_runs_tenant_id_fkey'), 'payroll_runs', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'payroll_entries', type_='foreignkey')
    op.create_foreign_key(op.f('payroll_entries_tenant_id_fkey'), 'payroll_entries', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'payroll_audit_logs', type_='foreignkey')
    op.create_foreign_key(op.f('payroll_audit_logs_tenant_id_fkey'), 'payroll_audit_logs', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'leave_requests', type_='foreignkey')
    op.create_foreign_key(op.f('leave_requests_tenant_id_fkey'), 'leave_requests', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'leave_policies', type_='foreignkey')
    op.create_foreign_key(op.f('leave_policies_tenant_id_fkey'), 'leave_policies', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'leave_notifications', type_='foreignkey')
    op.create_foreign_key(op.f('leave_notifications_tenant_id_fkey'), 'leave_notifications', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'leave_calendars', type_='foreignkey')
    op.create_foreign_key(op.f('leave_calendars_tenant_id_fkey'), 'leave_calendars', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'leave_balances', type_='foreignkey')
    op.create_foreign_key(op.f('leave_balances_tenant_id_fkey'), 'leave_balances', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'leave_approval_workflows', type_='foreignkey')
    op.create_foreign_key(op.f('leave_approval_workflows_tenant_id_fkey'), 'leave_approval_workflows', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.drop_index(op.f('ix_employees_tenant_id'), table_name='employees')
    op.drop_column('employees', 'tenant_id')
    op.drop_constraint(None, 'departments', type_='foreignkey')
    op.drop_index(op.f('ix_departments_tenant_id'), table_name='departments')
    op.drop_column('departments', 'tenant_id')
    # ### end Alembic commands ###
